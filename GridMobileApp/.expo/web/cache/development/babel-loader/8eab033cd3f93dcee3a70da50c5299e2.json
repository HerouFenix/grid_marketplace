{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/navigation/Screens.js\";\nimport React from 'react';\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport ComponentsScreen from \"../screens/Components\";\nimport GamesScreen from \"../screens/Games\";\nimport ProfileScreen from \"../screens/Profile\";\nimport WishlistScreen from \"../screens/Wishlist\";\nimport SellScreen from \"../screens/Sell\";\nimport WalletScreen from \"../screens/Wallet\";\nimport OnboardingScreen from \"../screens/Onboarding\";\nimport ProScreen from \"../screens/Pro\";\nimport SettingsScreen from \"../screens/Settings\";\nimport CustomDrawerContent from \"./Menu\";\nimport { Icon, Header } from \"../components\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Images, materialTheme } from \"../constants/\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar profile = {\n  avatar: Images.Profile,\n  name: \"Rachel Brown\",\n  type: \"Seller\",\n  plan: \"Pro\",\n  rating: 4.8\n};\n\nfunction ProfileStack(props) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Profile\",\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      header: function header(_ref) {\n        var navigation = _ref.navigation,\n            scene = _ref.scene;\n        return React.createElement(Header, {\n          white: true,\n          transparent: true,\n          title: \"Profile\",\n          scene: scene,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        });\n      },\n      headerTransparent: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction WishlistStack(props) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Wishlist\",\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Wishlist\",\n    component: WishlistScreen,\n    options: {\n      header: function header(_ref2) {\n        var navigation = _ref2.navigation,\n            scene = _ref2.scene;\n        return React.createElement(Header, {\n          title: \"Wishlist\",\n          scene: scene,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SellStack(props) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Sell\",\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Sell\",\n    component: SellScreen,\n    options: {\n      header: function header(_ref3) {\n        var navigation = _ref3.navigation,\n            scene = _ref3.scene;\n        return React.createElement(Header, {\n          title: \"Sell\",\n          scene: scene,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction WalletStack(props) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Wallet\",\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Wallet\",\n    component: WalletScreen,\n    options: {\n      header: function header(_ref4) {\n        var navigation = _ref4.navigation,\n            scene = _ref4.scene;\n        return React.createElement(Header, {\n          title: \"Wallet\",\n          scene: scene,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ComponentsStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Components\",\n    component: ComponentsScreen,\n    options: {\n      header: function header(_ref5) {\n        var navigation = _ref5.navigation,\n            scene = _ref5.scene;\n        return React.createElement(Header, {\n          title: \"Components\",\n          scene: scene,\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction GamesStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Games\",\n    component: GamesScreen,\n    options: {\n      header: function header(_ref6) {\n        var navigation = _ref6.navigation,\n            scene = _ref6.scene;\n        return React.createElement(Header, {\n          search: true,\n          tabs: true,\n          title: \"Games\",\n          navigation: navigation,\n          scene: scene,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction AppStack(props) {\n  return React.createElement(Drawer.Navigator, {\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        profile: profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }));\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOptions: {\n      activeTintColor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: materialTheme.COLORS.ACTIVE,\n      inactiveBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.74,\n        paddingHorizontal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Games\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Games\",\n    component: GamesStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref7) {\n        var focused = _ref7.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"gamepad\",\n          size: 16,\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Wishlist\",\n    component: WishlistStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"heart\",\n          size: 16,\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sell\",\n    component: SellStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref9) {\n        var focused = _ref9.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"money-bill-wave\",\n          size: 16,\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Wallet\",\n    component: WalletStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref10) {\n        var focused = _ref10.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"wallet\",\n          size: 16,\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref11) {\n        var focused = _ref11.focused;\n        return React.createElement(FontAwesome5, {\n          name: \"user\",\n          size: 16,\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Components\",\n    component: ComponentsStack,\n    options: {\n      drawerIcon: function drawerIcon(_ref12) {\n        var focused = _ref12.focused;\n        return React.createElement(Icon, {\n          size: 16,\n          name: \"md-switch\",\n          family: \"ionicon\",\n          color: focused ? \"white\" : materialTheme.COLORS.MUTED,\n          style: {\n            marginRight: 2,\n            marginLeft: 2\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function OnboardingStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Onboarding\",\n    component: OnboardingScreen,\n    option: {\n      headerTransparent: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: AppStack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/navigation/Screens.js"],"names":["React","createStackNavigator","createDrawerNavigator","Block","Text","theme","ComponentsScreen","GamesScreen","ProfileScreen","WishlistScreen","SellScreen","WalletScreen","OnboardingScreen","ProScreen","SettingsScreen","CustomDrawerContent","Icon","Header","FontAwesome5","Images","materialTheme","Dimensions","get","width","Stack","Drawer","profile","avatar","Profile","name","type","plan","rating","ProfileStack","props","header","navigation","scene","headerTransparent","WishlistStack","SellStack","WalletStack","ComponentsStack","GamesStack","AppStack","flex","backgroundColor","activeTintColor","inactiveTintColor","activeBackgroundColor","COLORS","ACTIVE","inactiveBackgroundColor","itemStyle","paddingHorizontal","justifyContent","alignContent","overflow","labelStyle","fontSize","fontWeight","drawerIcon","focused","MUTED","marginRight","marginLeft","OnboardingStack"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Easing, Animated, Dimensions } from 'react-native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\nimport { Block, Text, theme } from \"galio-framework\";\n\nimport ComponentsScreen from '../screens/Components';\nimport GamesScreen from '../screens/Games';\nimport ProfileScreen from '../screens/Profile';\nimport WishlistScreen from '../screens/Wishlist';\nimport SellScreen from '../screens/Sell';\nimport WalletScreen from '../screens/Wallet';\n\n\nimport OnboardingScreen from '../screens/Onboarding';\nimport ProScreen from '../screens/Pro';\nimport SettingsScreen from '../screens/Settings';\n\nimport CustomDrawerContent from './Menu';\nimport { Icon, Header } from '../components';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Images, materialTheme } from \"../constants/\";\n\nconst { width } = Dimensions.get(\"screen\");\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst profile = {\n  avatar: Images.Profile,\n  name: \"Rachel Brown\",\n  type: \"Seller\",\n  plan: \"Pro\",\n  rating: 4.8\n};\n\nfunction ProfileStack(props) {\n  return (\n    <Stack.Navigator initialRouteName=\"Profile\" mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header\n              white\n              transparent\n              title=\"Profile\"\n              scene={scene}\n              navigation={navigation}\n            />\n          ),\n          headerTransparent: true\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction WishlistStack(props) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Wishlist\"\n      mode=\"card\"\n      headerMode=\"screen\"\n    >\n      <Stack.Screen\n        name=\"Wishlist\"\n        component={WishlistScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Wishlist\" scene={scene} navigation={navigation} />\n          )\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction SellStack(props) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Sell\"\n      mode=\"card\"\n      headerMode=\"screen\"\n    >\n      <Stack.Screen\n        name=\"Sell\"\n        component={SellScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Sell\" scene={scene} navigation={navigation} />\n          )\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction WalletStack(props) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Wallet\"\n      mode=\"card\"\n      headerMode=\"screen\"\n    >\n      <Stack.Screen\n        name=\"Wallet\"\n        component={WalletScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Wallet\" scene={scene} navigation={navigation} />\n          )\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction ComponentsStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Components\"\n        component={ComponentsScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header title=\"Components\" scene={scene} navigation={navigation} />\n          )\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction GamesStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"screen\">\n      <Stack.Screen\n        name=\"Games\"\n        component={GamesScreen}\n        options={{\n          header: ({ navigation, scene }) => (\n            <Header\n              search\n              tabs\n              title=\"Games\"\n              navigation={navigation}\n              scene={scene}\n            />\n          )\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction AppStack(props) {\n  return (\n    <Drawer.Navigator\n      style={{ flex: 1 }}\n      drawerContent={props => (\n        <CustomDrawerContent {...props} profile={profile} />\n      )}\n      drawerStyle={{\n        backgroundColor: \"white\",\n        width: width * 0.8\n      }}\n      drawerContentOptions={{\n        activeTintColor: \"white\",\n        inactiveTintColor: \"#000\",\n        activeBackgroundColor: materialTheme.COLORS.ACTIVE,\n        inactiveBackgroundColor: \"transparent\",\n        itemStyle: {\n          width: width * 0.74,\n          paddingHorizontal: 12,\n          // paddingVertical: 4,\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          // alignItems: 'center',\n          overflow: \"hidden\"\n        },\n        labelStyle: {\n          fontSize: 18,\n          fontWeight: \"normal\"\n        }\n      }}\n      initialRouteName=\"Games\"\n    >\n      <Drawer.Screen\n        name=\"Games\"\n        component={GamesStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <FontAwesome5 name=\"gamepad\" size={16} color={focused ? \"white\" : materialTheme.COLORS.MUTED} />\n          )\n        }}\n      />\n      <Drawer.Screen\n        name=\"Wishlist\"\n        component={WishlistStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <FontAwesome5 name=\"heart\" size={16} color={focused ? \"white\" : materialTheme.COLORS.MUTED} />\n          )\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Sell\"\n        component={SellStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <FontAwesome5 name=\"money-bill-wave\" size={16} color={focused ? \"white\" : materialTheme.COLORS.MUTED} />\n          )\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Wallet\"\n        component={WalletStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <FontAwesome5 name=\"wallet\" size={16} color={focused ? \"white\" : materialTheme.COLORS.MUTED} />\n          )\n        }}\n      />\n\n      <Drawer.Screen\n        name=\"Profile\"\n        component={ProfileStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <FontAwesome5 name=\"user\" size={16} color={focused ? \"white\" : materialTheme.COLORS.MUTED} />\n          )\n        }}\n      />\n      <Drawer.Screen\n        name=\"Components\"\n        component={ComponentsStack}\n        options={{\n          drawerIcon: ({ focused }) => (\n            <Icon\n              size={16}\n              name=\"md-switch\"\n              family=\"ionicon\"\n              color={focused ? \"white\" : materialTheme.COLORS.MUTED}\n              style={{ marginRight: 2, marginLeft: 2 }}\n            />\n          )\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function OnboardingStack(props) {\n  return (\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\n      <Stack.Screen\n        name=\"Onboarding\"\n        component={OnboardingScreen}\n        option={{\n          headerTransparent: true\n        }}\n      />\n      <Stack.Screen name=\"App\" component={AppStack} />\n    </Stack.Navigator>\n  );\n}\n\n/*\nconst ProfileStack = createStackNavigator({\n  Profile: {\n    screen: ProfileScreen,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header white transparent title=\"Profile\" navigation={navigation} />,\n      headerTransparent: true,\n    })\n  },\n}, {\n  cardStyle: { backgroundColor: '#EEEEEE', },\n  transitionConfig,\n});\n\nconst SettingsStack = createStackNavigator({\n  Settings: {\n    screen: SettingsScreen,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header title=\"Settings\" navigation={navigation} />,\n    })\n  },\n}, {\n  cardStyle: { backgroundColor: '#EEEEEE', },\n  transitionConfig,\n});\n\nconst ComponentsStack = createStackNavigator({\n  Components: {\n    screen: ComponentsScreen,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header title=\"Components\" navigation={navigation} />,\n    })\n  },\n}, {\n  cardStyle: { backgroundColor: '#EEEEEE', },\n  transitionConfig,\n});\n\n\nconst HomeStack = createStackNavigator({\n  Home: {\n    screen: HomeScreen,\n    navigationOptions: ({navigation}) => ({\n      header: <Header search tabs title=\"Home\" navigation={navigation} />,\n    })\n  },\n  Pro: {\n    screen: ProScreen,\n    navigationOptions: ({navigation}) => ({\n      header: <Header back white transparent title=\"\" navigation={navigation} />,\n      headerTransparent: true,\n    })\n  },\n},\n{\n  cardStyle: {\n    backgroundColor: '#EEEEEE', //this is the backgroundColor for the app\n  },\n  transitionConfig,\n});\n\nconst AppStack = createDrawerNavigator(\n  {\n    Onboarding: {\n      screen: OnboardingScreen,\n      navigationOptions: {\n        drawerLabel: () => {},\n      },\n    },\n    Home: {\n      screen: HomeStack,\n      navigationOptions: {\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Home\" title=\"Home\" />\n        )\n      }\n    },\n    Woman: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"Woman\" />\n        ),\n      }),\n    },\n    Man: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"Man\" />\n        ),\n      }),\n    },\n    Kids: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"Kids\" />\n        ),\n      }),\n    },\n    NewCollection: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"New Collection\" />\n        ),\n      }),\n    },\n    Profile: {\n      screen: ProfileStack,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Profile\" title=\"Profile\" />\n        ),\n      }),\n    },\n    Settings: {\n      screen: SettingsStack,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Settings\" title=\"Settings\" />\n        ),\n      }),\n    },\n    Components: {\n      screen: ComponentsStack,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Components\" title=\"Components\" />\n        ),\n      }),\n    },\n    MenuDivider: {\n      screen: HomeStack,\n      navigationOptions: {\n        drawerLabel: () => <Block style={{marginVertical: 8}}><Text>{` `}</Text></Block>,\n      },\n    },\n    SignIn: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"Sign In\" />\n        ),\n      }),\n    },\n    SignUp: {\n      screen: ProScreen,\n      navigationOptions: (navOpt) => ({\n        drawerLabel: ({focused}) => (\n          <Drawer focused={focused} screen=\"Pro\" title=\"Sign Up\" />\n        ),\n      }),\n    },\n  },\n  Menu\n);\n\nconst AppContainer = createAppContainer(AppStack);\nexport default AppContainer;\n\n*/"]},"metadata":{},"sourceType":"module"}