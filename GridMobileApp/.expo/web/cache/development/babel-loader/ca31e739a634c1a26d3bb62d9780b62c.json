{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/screens/Sell.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Block, Text, Input, theme } from 'galio-framework';\nimport { Icon, Product } from \"../components/\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width;\n\nimport products from \"../constants/products\";\n\nvar SellScreen = function (_React$Component) {\n  _inherits(SellScreen, _React$Component);\n\n  var _super = _createSuper(SellScreen);\n\n  function SellScreen() {\n    var _this;\n\n    _classCallCheck(this, SellScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderProducts = function () {\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: styles.products,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(SellScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Block, {\n        flex: true,\n        center: true,\n        style: styles.home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, this.renderProducts());\n    }\n  }]);\n\n  return SellScreen;\n}(React.Component);\n\nexport { SellScreen as default };\nvar styles = StyleSheet.create({\n  home: {\n    width: width\n  },\n  search: {\n    height: 48,\n    width: width - 32,\n    marginHorizontal: 16,\n    borderWidth: 1,\n    borderRadius: 3\n  },\n  header: {\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    elevation: 4,\n    zIndex: 2\n  },\n  tabs: {\n    marginBottom: 24,\n    marginTop: 10,\n    elevation: 4\n  },\n  tab: {\n    backgroundColor: theme.COLORS.TRANSPARENT,\n    width: width * 0.50,\n    borderRadius: 0,\n    borderWidth: 0,\n    height: 24,\n    elevation: 0\n  },\n  tabTitle: {\n    lineHeight: 19,\n    fontWeight: '300'\n  },\n  divider: {\n    borderRightWidth: 0.3,\n    borderRightColor: theme.COLORS.MUTED\n  },\n  products: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE * 2\n  }\n});","map":{"version":3,"sources":["/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/screens/Sell.js"],"names":["React","Button","Block","Text","Input","theme","Icon","Product","Dimensions","get","width","products","SellScreen","renderProducts","styles","home","Component","StyleSheet","create","search","height","marginHorizontal","borderWidth","borderRadius","header","backgroundColor","COLORS","WHITE","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity","elevation","zIndex","tabs","marginBottom","marginTop","tab","TRANSPARENT","tabTitle","lineHeight","fontWeight","divider","borderRightWidth","borderRightColor","MUTED","SIZES","BASE","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Dimensions, ScrollView } from 'react-native';\nimport { Button, Block, Text, Input, theme } from 'galio-framework';\n\nimport { Icon, Product } from '../components/';\n\nconst { width } = Dimensions.get('screen');\nimport products from '../constants/products';\n\nexport default class SellScreen extends React.Component {\n\n  renderProducts = () => {\n    return (\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.products}>\n        <Block flex>\n\n        </Block>\n      </ScrollView>\n    )\n  }\n\n  render() {\n    return (\n      <Block flex center style={styles.home}>\n        {this.renderProducts()}\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  home: {\n    width: width,    \n  },\n  search: {\n    height: 48,\n    width: width - 32,\n    marginHorizontal: 16,\n    borderWidth: 1,\n    borderRadius: 3,\n  },\n  header: {\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    elevation: 4,\n    zIndex: 2,\n  },\n  tabs: {\n    marginBottom: 24,\n    marginTop: 10,\n    elevation: 4,\n  },\n  tab: {\n    backgroundColor: theme.COLORS.TRANSPARENT,\n    width: width * 0.50,\n    borderRadius: 0,\n    borderWidth: 0,\n    height: 24,\n    elevation: 0,\n  },\n  tabTitle: {\n    lineHeight: 19,\n    fontWeight: '300'\n  },\n  divider: {\n    borderRightWidth: 0.3,\n    borderRightColor: theme.COLORS.MUTED,\n  },\n  products: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE * 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}