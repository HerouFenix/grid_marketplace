{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/navigation/BottomTabNavigator.js\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nvar BottomTab = createBottomTabNavigator();\nvar INITIAL_ROUTE_NAME = 'Home';\n\nfunction MyTabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? ['selected'] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: isFocused ? '#673ab7' : '#222'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, label));\n  }));\n}\n\nexport default function BottomTabNavigator(_ref2) {\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n  navigation.setOptions({\n    headerTitle: getHeaderTitle(route)\n  });\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    tabBar: function tabBar(props) {\n      return React.createElement(MyTabBar, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 81\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Sell\",\n    component: LinksScreen,\n    options: {\n      title: 'Sell',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"money-bill-wave\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Cart\",\n    component: LinksScreen,\n    options: {\n      title: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"shopping-cart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Games\",\n    component: HomeScreen,\n    options: {\n      title: 'Games',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"gamepad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Wallet\",\n    component: LinksScreen,\n    options: {\n      title: 'Wallet',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"wallet\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Profile\",\n    component: LinksScreen,\n    options: {\n      title: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var focused = _ref7.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getHeaderTitle(route) {\n  var _route$state$routes$r, _route$state, _route$state$routes$r2;\n\n  var routeName = (_route$state$routes$r = (_route$state = route.state) == null ? void 0 : (_route$state$routes$r2 = _route$state.routes[route.state.index]) == null ? void 0 : _route$state$routes$r2.name) != null ? _route$state$routes$r : INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n\n    case 'Links':\n      return 'Links to learn more';\n  }\n}","map":{"version":3,"sources":["/home/ds/Desktop/TQS/Projetos/grid/code/frontend/mobile-app/navigation/BottomTabNavigator.js"],"names":["createBottomTabNavigator","React","TabBarIcon","HomeScreen","LinksScreen","BottomTab","INITIAL_ROUTE_NAME","MyTabBar","state","descriptors","navigation","flexDirection","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","tabBarAccessibilityLabel","tabBarTestID","flex","color","BottomTabNavigator","setOptions","headerTitle","getHeaderTitle","props","tabBarIcon","focused","routeName"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: 'tabPress',\n            target: route.key,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityStates={isFocused ? ['selected'] : []}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{ flex: 1 }}\n          >\n            <Text style={{ color: isFocused ? '#673ab7' : '#222' }}>\n              {label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME} tabBar={props => <MyTabBar {...props} />}>\n      <BottomTab.Screen\n        name=\"Sell\"\n        component={LinksScreen}\n        options={{\n          title: 'Sell',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"money-bill-wave\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Cart\"\n        component={LinksScreen}\n        options={{\n          title: 'Cart',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"shopping-cart\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Games\"\n        component={HomeScreen}\n        options={{\n          title: 'Games',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"gamepad\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Wallet\"\n        component={LinksScreen}\n        options={{\n          title: 'Wallet',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"wallet\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={LinksScreen}\n        options={{\n          title: 'Profile',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"user\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}